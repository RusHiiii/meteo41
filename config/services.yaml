imports:
    - { resource: '../Resources/config/service/' }

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Fixtures\Provider\UserProvider:
        arguments:
            - "@password_encoder"
        tags: ['nelmio_alice.faker.provider']

    App\Fixtures\Provider\DateProvider:
        tags: [ 'nelmio_alice.faker.provider' ]

    App\Core\ExternalApi\Geocoding:
        arguments:
            - "@http_client"
            - '%env(resolve:GEOCODING_KEY)%'

    App\Core\ExternalApi\OpenWeather:
        arguments:
            - "@http_client"
            - '%env(resolve:OPEN_WEATHER_KEY)%'

    App\Security\LoginAuthenticator:
        arguments:
            - '@App\Repository\UserRepository'
            - "@password_encoder"
            - "@lexik_jwt_authentication.jwt_manager"
        tags: [ 'nelmio_alice.faker.provider' ]

    password_encoder:
        class: Symfony\Component\Security\Core\Encoder\NativePasswordEncoder

    jwt_listener:
        class: App\Security\JWTCreatedListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }